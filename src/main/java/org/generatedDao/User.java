package org.generatedDao;
// Generated Aug 25, 2024, 11:51:02â€¯AM by Hibernate Tools 6.5.0.Final


import jakarta.persistence.*;

import java.sql.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="ecommerce"
    , uniqueConstraints = @UniqueConstraint(columnNames="email") 
)
public class User  implements java.io.Serializable {


     private int userId;
     private String userName;
     private float balance;
     private String address;
     private String email;
     private String password;
     private Date birthDate;
     private String phone;
     private Set<Interests> interestses = new HashSet<Interests>(0);
     private Set<BalanceLogs> balanceLogses = new HashSet<BalanceLogs>(0);
     private Set<ProductsInsideCart> productsInsideCarts = new HashSet<ProductsInsideCart>(0);
     private Set<Order> orders = new HashSet<Order>(0);

    public User() {
    }

	
    public User(int userId, String userName, float balance, String address, String email, String password, String phone) {
        this.userId = userId;
        this.userName = userName;
        this.balance = balance;
        this.address = address;
        this.email = email;
        this.password = password;
        this.phone = phone;
    }
    public User(int userId, String userName, float balance, String address, String email, String password, Date birthDate, String phone, Set<Interests> interestses, Set<BalanceLogs> balanceLogses, Set<ProductsInsideCart> productsInsideCarts, Set<Order> orders) {
       this.userId = userId;
       this.userName = userName;
       this.balance = balance;
       this.address = address;
       this.email = email;
       this.password = password;
       this.birthDate = birthDate;
       this.phone = phone;
       this.interestses = interestses;
       this.balanceLogses = balanceLogses;
       this.productsInsideCarts = productsInsideCarts;
       this.orders = orders;
    }
   
     @Id 

    
    @Column(name="user_id", unique=true, nullable=false)
    public int getUserId() {
        return this.userId;
    }
    
    public void setUserId(int userId) {
        this.userId = userId;
    }

    
    @Column(name="user_name", nullable=false, length=45)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }

    
    @Column(name="balance", nullable=false, precision=12)
    public float getBalance() {
        return this.balance;
    }
    
    public void setBalance(float balance) {
        this.balance = balance;
    }

    
    @Column(name="address", nullable=false, length=255)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="email", unique=true, nullable=false, length=255)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="password", nullable=false, length=45)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="birth_date", length=10)
    public Date getBirthDate() {
        return this.birthDate;
    }
    
    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    
    @Column(name="phone", nullable=false, length=255)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_interests", catalog="ecommerce", uniqueConstraints={@UniqueConstraint(columnNames="interests_interests_id"), @UniqueConstraint(columnNames="user_user_id")}, joinColumns = { 
        @JoinColumn(name="user_user_id", unique=true, nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="interests_interests_id", unique=true, nullable=false, updatable=false) })
    public Set<Interests> getInterestses() {
        return this.interestses;
    }
    
    public void setInterestses(Set<Interests> interestses) {
        this.interestses = interestses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<BalanceLogs> getBalanceLogses() {
        return this.balanceLogses;
    }
    
    public void setBalanceLogses(Set<BalanceLogs> balanceLogses) {
        this.balanceLogses = balanceLogses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<ProductsInsideCart> getProductsInsideCarts() {
        return this.productsInsideCarts;
    }
    
    public void setProductsInsideCarts(Set<ProductsInsideCart> productsInsideCarts) {
        this.productsInsideCarts = productsInsideCarts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Order> getOrders() {
        return this.orders;
    }
    
    public void setOrders(Set<Order> orders) {
        this.orders = orders;
    }




}


